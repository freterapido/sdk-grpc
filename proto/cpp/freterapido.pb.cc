// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: freterapido.proto

#include "freterapido.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_freterapido_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Endereco;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RemetenteRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DestinatarioRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ExpedidorRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VolumeRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VolumeResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_freterapido_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TransportadoraResponse;
}  // namespace protobuf_freterapido_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64Value;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace freterapido {
class CalcularFreteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalcularFreteRequest>
      _instance;
} _CalcularFreteRequest_default_instance_;
class EnderecoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Endereco>
      _instance;
} _Endereco_default_instance_;
class RemetenteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemetenteRequest>
      _instance;
} _RemetenteRequest_default_instance_;
class ExpedidorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExpedidorRequest>
      _instance;
} _ExpedidorRequest_default_instance_;
class DestinatarioRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DestinatarioRequest>
      _instance;
} _DestinatarioRequest_default_instance_;
class VolumeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VolumeRequest>
      _instance;
} _VolumeRequest_default_instance_;
class CalcularFreteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CalcularFreteResponse>
      _instance;
} _CalcularFreteResponse_default_instance_;
class TransportadoraResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransportadoraResponse>
      _instance;
} _TransportadoraResponse_default_instance_;
class VolumeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VolumeResponse>
      _instance;
} _VolumeResponse_default_instance_;
}  // namespace freterapido
namespace protobuf_freterapido_2eproto {
static void InitDefaultsCalcularFreteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_CalcularFreteRequest_default_instance_;
    new (ptr) ::freterapido::CalcularFreteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::CalcularFreteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_CalcularFreteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsCalcularFreteRequest}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_Int64Value.base,
      &protobuf_freterapido_2eproto::scc_info_RemetenteRequest.base,
      &protobuf_freterapido_2eproto::scc_info_ExpedidorRequest.base,
      &protobuf_freterapido_2eproto::scc_info_DestinatarioRequest.base,
      &protobuf_freterapido_2eproto::scc_info_VolumeRequest.base,}};

static void InitDefaultsEndereco() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_Endereco_default_instance_;
    new (ptr) ::freterapido::Endereco();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::Endereco::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Endereco =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEndereco}, {}};

static void InitDefaultsRemetenteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_RemetenteRequest_default_instance_;
    new (ptr) ::freterapido::RemetenteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::RemetenteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemetenteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemetenteRequest}, {}};

static void InitDefaultsExpedidorRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_ExpedidorRequest_default_instance_;
    new (ptr) ::freterapido::ExpedidorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::ExpedidorRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExpedidorRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExpedidorRequest}, {
      &protobuf_freterapido_2eproto::scc_info_Endereco.base,}};

static void InitDefaultsDestinatarioRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_DestinatarioRequest_default_instance_;
    new (ptr) ::freterapido::DestinatarioRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::DestinatarioRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DestinatarioRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDestinatarioRequest}, {
      &protobuf_freterapido_2eproto::scc_info_Endereco.base,}};

static void InitDefaultsVolumeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_VolumeRequest_default_instance_;
    new (ptr) ::freterapido::VolumeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::VolumeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VolumeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVolumeRequest}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

static void InitDefaultsCalcularFreteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_CalcularFreteResponse_default_instance_;
    new (ptr) ::freterapido::CalcularFreteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::CalcularFreteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CalcularFreteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCalcularFreteResponse}, {
      &protobuf_freterapido_2eproto::scc_info_TransportadoraResponse.base,
      &protobuf_freterapido_2eproto::scc_info_VolumeResponse.base,}};

static void InitDefaultsTransportadoraResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_TransportadoraResponse_default_instance_;
    new (ptr) ::freterapido::TransportadoraResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::TransportadoraResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TransportadoraResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransportadoraResponse}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsVolumeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::freterapido::_VolumeResponse_default_instance_;
    new (ptr) ::freterapido::VolumeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::freterapido::VolumeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VolumeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVolumeResponse}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_StringValue.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CalcularFreteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Endereco.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemetenteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExpedidorRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DestinatarioRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VolumeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CalcularFreteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransportadoraResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VolumeResponse.base);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, tipo_cobranca_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, filtro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, limite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, codigo_plataforma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, retornar_consolidacao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, remetente_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, expedidor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, destinatario_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteRequest, volumes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::Endereco, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::Endereco, cep_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::RemetenteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::RemetenteRequest, cnpj_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::ExpedidorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::ExpedidorRequest, endereco_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::DestinatarioRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::DestinatarioRequest, tipo_pessoa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::DestinatarioRequest, cnpj_cpf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::DestinatarioRequest, inscricao_estadual_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::DestinatarioRequest, endereco_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, tipo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, sku_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, descricao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, quantidade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, altura_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, largura_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, comprimento_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, peso_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, valor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, volumes_produto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, consolidar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, sobreposto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeRequest, tombar_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteResponse, token_oferta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteResponse, transportadoras_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::CalcularFreteResponse, volumes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, oferta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, cnpj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, logotipo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, nome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, servico_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, descricao_servico_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, prazo_entrega_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, validade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, custo_frete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::TransportadoraResponse, preco_frete_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, tipo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, sku_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, descricao_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, quantidade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, altura_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, largura_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, comprimento_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, peso_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, valor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, volumes_produto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::freterapido::VolumeResponse, items_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::freterapido::CalcularFreteRequest)},
  { 15, -1, sizeof(::freterapido::Endereco)},
  { 21, -1, sizeof(::freterapido::RemetenteRequest)},
  { 27, -1, sizeof(::freterapido::ExpedidorRequest)},
  { 33, -1, sizeof(::freterapido::DestinatarioRequest)},
  { 42, -1, sizeof(::freterapido::VolumeRequest)},
  { 60, -1, sizeof(::freterapido::CalcularFreteResponse)},
  { 68, -1, sizeof(::freterapido::TransportadoraResponse)},
  { 83, -1, sizeof(::freterapido::VolumeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_CalcularFreteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_Endereco_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_RemetenteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_ExpedidorRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_DestinatarioRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_VolumeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_CalcularFreteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_TransportadoraResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::freterapido::_VolumeResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "freterapido.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021freterapido.proto\022\013freterapido\032\036google"
      "/protobuf/wrappers.proto\032\037google/protobu"
      "f/timestamp.proto\"\375\004\n\024CalcularFreteReque"
      "st\022E\n\rtipo_cobranca\030\001 \001(\0162..freterapido."
      "CalcularFreteRequest.TipoCobranca\0228\n\006fil"
      "tro\030\002 \001(\0162(.freterapido.CalcularFreteReq"
      "uest.Filtro\022+\n\006limite\030\003 \001(\0132\033.google.pro"
      "tobuf.Int64Value\022\r\n\005token\030\004 \001(\t\022\031\n\021codig"
      "o_plataforma\030\005 \001(\t\022\035\n\025retornar_consolida"
      "cao\030\006 \001(\010\0220\n\tremetente\030\007 \001(\0132\035.freterapi"
      "do.RemetenteRequest\0220\n\texpedidor\030\010 \001(\0132\035"
      ".freterapido.ExpedidorRequest\0226\n\014destina"
      "tario\030\t \001(\0132 .freterapido.DestinatarioRe"
      "quest\022+\n\007volumes\030\n \003(\0132\032.freterapido.Vol"
      "umeRequest\"T\n\014TipoCobranca\022\030\n\024TIPOCOBRAN"
      "CA_UNKNOWN\020\000\022\024\n\020TIPOCOBRANCA_CIF\020\001\022\024\n\020TI"
      "POCOBRANCA_FOB\020\002\"O\n\006Filtro\022\025\n\021FILTRO_SEM"
      "_FILTRO\020\000\022\026\n\022FILTRO_MENOR_PRECO\020\001\022\026\n\022FIL"
      "TRO_MENOR_PRAZO\020\002\"\027\n\010Endereco\022\013\n\003cep\030\001 \001"
      "(\t\" \n\020RemetenteRequest\022\014\n\004cnpj\030\001 \001(\t\";\n\020"
      "ExpedidorRequest\022\'\n\010endereco\030\001 \001(\0132\025.fre"
      "terapido.Endereco\"\204\002\n\023DestinatarioReques"
      "t\022@\n\013tipo_pessoa\030\001 \001(\0162+.freterapido.Des"
      "tinatarioRequest.TipoPessoa\022\020\n\010cnpj_cpf\030"
      "\002 \001(\t\022\032\n\022inscricao_estadual\030\003 \001(\t\022\'\n\010end"
      "ereco\030\004 \001(\0132\025.freterapido.Endereco\"T\n\nTi"
      "poPessoa\022\026\n\022TIPOPESSOA_UNKNOWN\020\000\022\025\n\021TIPO"
      "PESSOA_FISICA\020\001\022\027\n\023TIPOPESSOA_JURIDICA\020\002"
      "\"\261\002\n\rVolumeRequest\022\014\n\004tipo\030\001 \001(\005\022)\n\003sku\030"
      "\002 \001(\0132\034.google.protobuf.StringValue\022/\n\td"
      "escricao\030\003 \001(\0132\034.google.protobuf.StringV"
      "alue\022\022\n\nquantidade\030\004 \001(\005\022\016\n\006altura\030\005 \001(\001"
      "\022\017\n\007largura\030\006 \001(\001\022\023\n\013comprimento\030\007 \001(\001\022\014"
      "\n\004peso\030\010 \001(\001\022\r\n\005valor\030\t \001(\001\022\027\n\017volumes_p"
      "roduto\030\n \001(\005\022\022\n\nconsolidar\030\013 \001(\010\022\022\n\nsobr"
      "eposto\030\014 \001(\010\022\016\n\006tombar\030\r \001(\010\"\231\001\n\025Calcula"
      "rFreteResponse\022\024\n\014token_oferta\030\001 \001(\t\022<\n\017"
      "transportadoras\030\002 \003(\0132#.freterapido.Tran"
      "sportadoraResponse\022,\n\007volumes\030\003 \003(\0132\033.fr"
      "eterapido.VolumeResponse\"\217\002\n\026Transportad"
      "oraResponse\022\016\n\006oferta\030\001 \001(\003\022\014\n\004cnpj\030\002 \001("
      "\t\022\020\n\010logotipo\030\003 \001(\t\022\014\n\004nome\030\004 \001(\t\022\017\n\007ser"
      "vico\030\005 \001(\t\0227\n\021descricao_servico\030\006 \001(\0132\034."
      "google.protobuf.StringValue\022\025\n\rprazo_ent"
      "rega\030\007 \001(\005\022,\n\010validade\030\010 \001(\0132\032.google.pr"
      "otobuf.Timestamp\022\023\n\013custo_frete\030\t \001(\001\022\023\n"
      "\013preco_frete\030\n \001(\001\"\246\002\n\016VolumeResponse\022\014\n"
      "\004tipo\030\001 \001(\005\022)\n\003sku\030\002 \001(\0132\034.google.protob"
      "uf.StringValue\022/\n\tdescricao\030\003 \001(\0132\034.goog"
      "le.protobuf.StringValue\022\022\n\nquantidade\030\004 "
      "\001(\005\022\016\n\006altura\030\005 \001(\001\022\017\n\007largura\030\006 \001(\001\022\023\n\013"
      "comprimento\030\007 \001(\001\022\014\n\004peso\030\010 \001(\001\022\r\n\005valor"
      "\030\t \001(\001\022\027\n\017volumes_produto\030\n \001(\005\022*\n\005items"
      "\030\013 \003(\0132\033.freterapido.VolumeResponse2e\n\013F"
      "reteRapido\022V\n\rCalcularFrete\022!.freterapid"
      "o.CalcularFreteRequest\032\".freterapido.Cal"
      "cularFreteResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2266);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "freterapido.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_freterapido_2eproto
namespace freterapido {
const ::google::protobuf::EnumDescriptor* CalcularFreteRequest_TipoCobranca_descriptor() {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_freterapido_2eproto::file_level_enum_descriptors[0];
}
bool CalcularFreteRequest_TipoCobranca_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CalcularFreteRequest_TipoCobranca CalcularFreteRequest::TIPOCOBRANCA_UNKNOWN;
const CalcularFreteRequest_TipoCobranca CalcularFreteRequest::TIPOCOBRANCA_CIF;
const CalcularFreteRequest_TipoCobranca CalcularFreteRequest::TIPOCOBRANCA_FOB;
const CalcularFreteRequest_TipoCobranca CalcularFreteRequest::TipoCobranca_MIN;
const CalcularFreteRequest_TipoCobranca CalcularFreteRequest::TipoCobranca_MAX;
const int CalcularFreteRequest::TipoCobranca_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CalcularFreteRequest_Filtro_descriptor() {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_freterapido_2eproto::file_level_enum_descriptors[1];
}
bool CalcularFreteRequest_Filtro_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CalcularFreteRequest_Filtro CalcularFreteRequest::FILTRO_SEM_FILTRO;
const CalcularFreteRequest_Filtro CalcularFreteRequest::FILTRO_MENOR_PRECO;
const CalcularFreteRequest_Filtro CalcularFreteRequest::FILTRO_MENOR_PRAZO;
const CalcularFreteRequest_Filtro CalcularFreteRequest::Filtro_MIN;
const CalcularFreteRequest_Filtro CalcularFreteRequest::Filtro_MAX;
const int CalcularFreteRequest::Filtro_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DestinatarioRequest_TipoPessoa_descriptor() {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_freterapido_2eproto::file_level_enum_descriptors[2];
}
bool DestinatarioRequest_TipoPessoa_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DestinatarioRequest_TipoPessoa DestinatarioRequest::TIPOPESSOA_UNKNOWN;
const DestinatarioRequest_TipoPessoa DestinatarioRequest::TIPOPESSOA_FISICA;
const DestinatarioRequest_TipoPessoa DestinatarioRequest::TIPOPESSOA_JURIDICA;
const DestinatarioRequest_TipoPessoa DestinatarioRequest::TipoPessoa_MIN;
const DestinatarioRequest_TipoPessoa DestinatarioRequest::TipoPessoa_MAX;
const int DestinatarioRequest::TipoPessoa_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CalcularFreteRequest::InitAsDefaultInstance() {
  ::freterapido::_CalcularFreteRequest_default_instance_._instance.get_mutable()->limite_ = const_cast< ::google::protobuf::Int64Value*>(
      ::google::protobuf::Int64Value::internal_default_instance());
  ::freterapido::_CalcularFreteRequest_default_instance_._instance.get_mutable()->remetente_ = const_cast< ::freterapido::RemetenteRequest*>(
      ::freterapido::RemetenteRequest::internal_default_instance());
  ::freterapido::_CalcularFreteRequest_default_instance_._instance.get_mutable()->expedidor_ = const_cast< ::freterapido::ExpedidorRequest*>(
      ::freterapido::ExpedidorRequest::internal_default_instance());
  ::freterapido::_CalcularFreteRequest_default_instance_._instance.get_mutable()->destinatario_ = const_cast< ::freterapido::DestinatarioRequest*>(
      ::freterapido::DestinatarioRequest::internal_default_instance());
}
void CalcularFreteRequest::clear_limite() {
  if (GetArenaNoVirtual() == NULL && limite_ != NULL) {
    delete limite_;
  }
  limite_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalcularFreteRequest::kTipoCobrancaFieldNumber;
const int CalcularFreteRequest::kFiltroFieldNumber;
const int CalcularFreteRequest::kLimiteFieldNumber;
const int CalcularFreteRequest::kTokenFieldNumber;
const int CalcularFreteRequest::kCodigoPlataformaFieldNumber;
const int CalcularFreteRequest::kRetornarConsolidacaoFieldNumber;
const int CalcularFreteRequest::kRemetenteFieldNumber;
const int CalcularFreteRequest::kExpedidorFieldNumber;
const int CalcularFreteRequest::kDestinatarioFieldNumber;
const int CalcularFreteRequest::kVolumesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalcularFreteRequest::CalcularFreteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_CalcularFreteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.CalcularFreteRequest)
}
CalcularFreteRequest::CalcularFreteRequest(const CalcularFreteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      volumes_(from.volumes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  codigo_plataforma_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.codigo_plataforma().size() > 0) {
    codigo_plataforma_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codigo_plataforma_);
  }
  if (from.has_limite()) {
    limite_ = new ::google::protobuf::Int64Value(*from.limite_);
  } else {
    limite_ = NULL;
  }
  if (from.has_remetente()) {
    remetente_ = new ::freterapido::RemetenteRequest(*from.remetente_);
  } else {
    remetente_ = NULL;
  }
  if (from.has_expedidor()) {
    expedidor_ = new ::freterapido::ExpedidorRequest(*from.expedidor_);
  } else {
    expedidor_ = NULL;
  }
  if (from.has_destinatario()) {
    destinatario_ = new ::freterapido::DestinatarioRequest(*from.destinatario_);
  } else {
    destinatario_ = NULL;
  }
  ::memcpy(&tipo_cobranca_, &from.tipo_cobranca_,
    static_cast<size_t>(reinterpret_cast<char*>(&retornar_consolidacao_) -
    reinterpret_cast<char*>(&tipo_cobranca_)) + sizeof(retornar_consolidacao_));
  // @@protoc_insertion_point(copy_constructor:freterapido.CalcularFreteRequest)
}

void CalcularFreteRequest::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codigo_plataforma_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&limite_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retornar_consolidacao_) -
      reinterpret_cast<char*>(&limite_)) + sizeof(retornar_consolidacao_));
}

CalcularFreteRequest::~CalcularFreteRequest() {
  // @@protoc_insertion_point(destructor:freterapido.CalcularFreteRequest)
  SharedDtor();
}

void CalcularFreteRequest::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codigo_plataforma_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete limite_;
  if (this != internal_default_instance()) delete remetente_;
  if (this != internal_default_instance()) delete expedidor_;
  if (this != internal_default_instance()) delete destinatario_;
}

void CalcularFreteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CalcularFreteRequest::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalcularFreteRequest& CalcularFreteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_CalcularFreteRequest.base);
  return *internal_default_instance();
}


void CalcularFreteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.CalcularFreteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  volumes_.Clear();
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  codigo_plataforma_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && limite_ != NULL) {
    delete limite_;
  }
  limite_ = NULL;
  if (GetArenaNoVirtual() == NULL && remetente_ != NULL) {
    delete remetente_;
  }
  remetente_ = NULL;
  if (GetArenaNoVirtual() == NULL && expedidor_ != NULL) {
    delete expedidor_;
  }
  expedidor_ = NULL;
  if (GetArenaNoVirtual() == NULL && destinatario_ != NULL) {
    delete destinatario_;
  }
  destinatario_ = NULL;
  ::memset(&tipo_cobranca_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retornar_consolidacao_) -
      reinterpret_cast<char*>(&tipo_cobranca_)) + sizeof(retornar_consolidacao_));
  _internal_metadata_.Clear();
}

bool CalcularFreteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.CalcularFreteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .freterapido.CalcularFreteRequest.TipoCobranca tipo_cobranca = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tipo_cobranca(static_cast< ::freterapido::CalcularFreteRequest_TipoCobranca >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .freterapido.CalcularFreteRequest.Filtro filtro = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_filtro(static_cast< ::freterapido::CalcularFreteRequest_Filtro >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Int64Value limite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_limite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.CalcularFreteRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string codigo_plataforma = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codigo_plataforma()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codigo_plataforma().data(), static_cast<int>(this->codigo_plataforma().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.CalcularFreteRequest.codigo_plataforma"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool retornar_consolidacao = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &retornar_consolidacao_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .freterapido.RemetenteRequest remetente = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_remetente()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .freterapido.ExpedidorRequest expedidor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expedidor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .freterapido.DestinatarioRequest destinatario = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destinatario()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .freterapido.VolumeRequest volumes = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_volumes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.CalcularFreteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.CalcularFreteRequest)
  return false;
#undef DO_
}

void CalcularFreteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.CalcularFreteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .freterapido.CalcularFreteRequest.TipoCobranca tipo_cobranca = 1;
  if (this->tipo_cobranca() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tipo_cobranca(), output);
  }

  // .freterapido.CalcularFreteRequest.Filtro filtro = 2;
  if (this->filtro() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->filtro(), output);
  }

  // .google.protobuf.Int64Value limite = 3;
  if (this->has_limite()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_limite(), output);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.CalcularFreteRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->token(), output);
  }

  // string codigo_plataforma = 5;
  if (this->codigo_plataforma().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codigo_plataforma().data(), static_cast<int>(this->codigo_plataforma().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.CalcularFreteRequest.codigo_plataforma");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->codigo_plataforma(), output);
  }

  // bool retornar_consolidacao = 6;
  if (this->retornar_consolidacao() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->retornar_consolidacao(), output);
  }

  // .freterapido.RemetenteRequest remetente = 7;
  if (this->has_remetente()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_remetente(), output);
  }

  // .freterapido.ExpedidorRequest expedidor = 8;
  if (this->has_expedidor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_expedidor(), output);
  }

  // .freterapido.DestinatarioRequest destinatario = 9;
  if (this->has_destinatario()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_destinatario(), output);
  }

  // repeated .freterapido.VolumeRequest volumes = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->volumes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->volumes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.CalcularFreteRequest)
}

::google::protobuf::uint8* CalcularFreteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.CalcularFreteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .freterapido.CalcularFreteRequest.TipoCobranca tipo_cobranca = 1;
  if (this->tipo_cobranca() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tipo_cobranca(), target);
  }

  // .freterapido.CalcularFreteRequest.Filtro filtro = 2;
  if (this->filtro() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->filtro(), target);
  }

  // .google.protobuf.Int64Value limite = 3;
  if (this->has_limite()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_limite(), deterministic, target);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.CalcularFreteRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->token(), target);
  }

  // string codigo_plataforma = 5;
  if (this->codigo_plataforma().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codigo_plataforma().data(), static_cast<int>(this->codigo_plataforma().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.CalcularFreteRequest.codigo_plataforma");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->codigo_plataforma(), target);
  }

  // bool retornar_consolidacao = 6;
  if (this->retornar_consolidacao() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->retornar_consolidacao(), target);
  }

  // .freterapido.RemetenteRequest remetente = 7;
  if (this->has_remetente()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_remetente(), deterministic, target);
  }

  // .freterapido.ExpedidorRequest expedidor = 8;
  if (this->has_expedidor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_expedidor(), deterministic, target);
  }

  // .freterapido.DestinatarioRequest destinatario = 9;
  if (this->has_destinatario()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_destinatario(), deterministic, target);
  }

  // repeated .freterapido.VolumeRequest volumes = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->volumes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->volumes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.CalcularFreteRequest)
  return target;
}

size_t CalcularFreteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.CalcularFreteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .freterapido.VolumeRequest volumes = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->volumes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->volumes(static_cast<int>(i)));
    }
  }

  // string token = 4;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string codigo_plataforma = 5;
  if (this->codigo_plataforma().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->codigo_plataforma());
  }

  // .google.protobuf.Int64Value limite = 3;
  if (this->has_limite()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *limite_);
  }

  // .freterapido.RemetenteRequest remetente = 7;
  if (this->has_remetente()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *remetente_);
  }

  // .freterapido.ExpedidorRequest expedidor = 8;
  if (this->has_expedidor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expedidor_);
  }

  // .freterapido.DestinatarioRequest destinatario = 9;
  if (this->has_destinatario()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *destinatario_);
  }

  // .freterapido.CalcularFreteRequest.TipoCobranca tipo_cobranca = 1;
  if (this->tipo_cobranca() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tipo_cobranca());
  }

  // .freterapido.CalcularFreteRequest.Filtro filtro = 2;
  if (this->filtro() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->filtro());
  }

  // bool retornar_consolidacao = 6;
  if (this->retornar_consolidacao() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalcularFreteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.CalcularFreteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CalcularFreteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalcularFreteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.CalcularFreteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.CalcularFreteRequest)
    MergeFrom(*source);
  }
}

void CalcularFreteRequest::MergeFrom(const CalcularFreteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.CalcularFreteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  volumes_.MergeFrom(from.volumes_);
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.codigo_plataforma().size() > 0) {

    codigo_plataforma_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codigo_plataforma_);
  }
  if (from.has_limite()) {
    mutable_limite()->::google::protobuf::Int64Value::MergeFrom(from.limite());
  }
  if (from.has_remetente()) {
    mutable_remetente()->::freterapido::RemetenteRequest::MergeFrom(from.remetente());
  }
  if (from.has_expedidor()) {
    mutable_expedidor()->::freterapido::ExpedidorRequest::MergeFrom(from.expedidor());
  }
  if (from.has_destinatario()) {
    mutable_destinatario()->::freterapido::DestinatarioRequest::MergeFrom(from.destinatario());
  }
  if (from.tipo_cobranca() != 0) {
    set_tipo_cobranca(from.tipo_cobranca());
  }
  if (from.filtro() != 0) {
    set_filtro(from.filtro());
  }
  if (from.retornar_consolidacao() != 0) {
    set_retornar_consolidacao(from.retornar_consolidacao());
  }
}

void CalcularFreteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.CalcularFreteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalcularFreteRequest::CopyFrom(const CalcularFreteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.CalcularFreteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalcularFreteRequest::IsInitialized() const {
  return true;
}

void CalcularFreteRequest::Swap(CalcularFreteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalcularFreteRequest::InternalSwap(CalcularFreteRequest* other) {
  using std::swap;
  CastToBase(&volumes_)->InternalSwap(CastToBase(&other->volumes_));
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  codigo_plataforma_.Swap(&other->codigo_plataforma_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limite_, other->limite_);
  swap(remetente_, other->remetente_);
  swap(expedidor_, other->expedidor_);
  swap(destinatario_, other->destinatario_);
  swap(tipo_cobranca_, other->tipo_cobranca_);
  swap(filtro_, other->filtro_);
  swap(retornar_consolidacao_, other->retornar_consolidacao_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CalcularFreteRequest::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Endereco::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Endereco::kCepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Endereco::Endereco()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_Endereco.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.Endereco)
}
Endereco::Endereco(const Endereco& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cep_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cep().size() > 0) {
    cep_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cep_);
  }
  // @@protoc_insertion_point(copy_constructor:freterapido.Endereco)
}

void Endereco::SharedCtor() {
  cep_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Endereco::~Endereco() {
  // @@protoc_insertion_point(destructor:freterapido.Endereco)
  SharedDtor();
}

void Endereco::SharedDtor() {
  cep_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Endereco::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Endereco::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Endereco& Endereco::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_Endereco.base);
  return *internal_default_instance();
}


void Endereco::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.Endereco)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cep_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Endereco::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.Endereco)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cep = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cep()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cep().data(), static_cast<int>(this->cep().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.Endereco.cep"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.Endereco)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.Endereco)
  return false;
#undef DO_
}

void Endereco::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.Endereco)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cep = 1;
  if (this->cep().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cep().data(), static_cast<int>(this->cep().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.Endereco.cep");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cep(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.Endereco)
}

::google::protobuf::uint8* Endereco::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.Endereco)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cep = 1;
  if (this->cep().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cep().data(), static_cast<int>(this->cep().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.Endereco.cep");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cep(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.Endereco)
  return target;
}

size_t Endereco::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.Endereco)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cep = 1;
  if (this->cep().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cep());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Endereco::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.Endereco)
  GOOGLE_DCHECK_NE(&from, this);
  const Endereco* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Endereco>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.Endereco)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.Endereco)
    MergeFrom(*source);
  }
}

void Endereco::MergeFrom(const Endereco& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.Endereco)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cep().size() > 0) {

    cep_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cep_);
  }
}

void Endereco::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.Endereco)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Endereco::CopyFrom(const Endereco& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.Endereco)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Endereco::IsInitialized() const {
  return true;
}

void Endereco::Swap(Endereco* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Endereco::InternalSwap(Endereco* other) {
  using std::swap;
  cep_.Swap(&other->cep_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Endereco::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemetenteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemetenteRequest::kCnpjFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemetenteRequest::RemetenteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_RemetenteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.RemetenteRequest)
}
RemetenteRequest::RemetenteRequest(const RemetenteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cnpj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cnpj().size() > 0) {
    cnpj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnpj_);
  }
  // @@protoc_insertion_point(copy_constructor:freterapido.RemetenteRequest)
}

void RemetenteRequest::SharedCtor() {
  cnpj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemetenteRequest::~RemetenteRequest() {
  // @@protoc_insertion_point(destructor:freterapido.RemetenteRequest)
  SharedDtor();
}

void RemetenteRequest::SharedDtor() {
  cnpj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemetenteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemetenteRequest::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemetenteRequest& RemetenteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_RemetenteRequest.base);
  return *internal_default_instance();
}


void RemetenteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.RemetenteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cnpj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemetenteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.RemetenteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cnpj = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cnpj()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cnpj().data(), static_cast<int>(this->cnpj().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.RemetenteRequest.cnpj"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.RemetenteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.RemetenteRequest)
  return false;
#undef DO_
}

void RemetenteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.RemetenteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cnpj = 1;
  if (this->cnpj().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnpj().data(), static_cast<int>(this->cnpj().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.RemetenteRequest.cnpj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cnpj(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.RemetenteRequest)
}

::google::protobuf::uint8* RemetenteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.RemetenteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cnpj = 1;
  if (this->cnpj().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnpj().data(), static_cast<int>(this->cnpj().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.RemetenteRequest.cnpj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cnpj(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.RemetenteRequest)
  return target;
}

size_t RemetenteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.RemetenteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cnpj = 1;
  if (this->cnpj().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cnpj());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemetenteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.RemetenteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemetenteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemetenteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.RemetenteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.RemetenteRequest)
    MergeFrom(*source);
  }
}

void RemetenteRequest::MergeFrom(const RemetenteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.RemetenteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cnpj().size() > 0) {

    cnpj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnpj_);
  }
}

void RemetenteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.RemetenteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemetenteRequest::CopyFrom(const RemetenteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.RemetenteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemetenteRequest::IsInitialized() const {
  return true;
}

void RemetenteRequest::Swap(RemetenteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemetenteRequest::InternalSwap(RemetenteRequest* other) {
  using std::swap;
  cnpj_.Swap(&other->cnpj_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemetenteRequest::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExpedidorRequest::InitAsDefaultInstance() {
  ::freterapido::_ExpedidorRequest_default_instance_._instance.get_mutable()->endereco_ = const_cast< ::freterapido::Endereco*>(
      ::freterapido::Endereco::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExpedidorRequest::kEnderecoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExpedidorRequest::ExpedidorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_ExpedidorRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.ExpedidorRequest)
}
ExpedidorRequest::ExpedidorRequest(const ExpedidorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_endereco()) {
    endereco_ = new ::freterapido::Endereco(*from.endereco_);
  } else {
    endereco_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:freterapido.ExpedidorRequest)
}

void ExpedidorRequest::SharedCtor() {
  endereco_ = NULL;
}

ExpedidorRequest::~ExpedidorRequest() {
  // @@protoc_insertion_point(destructor:freterapido.ExpedidorRequest)
  SharedDtor();
}

void ExpedidorRequest::SharedDtor() {
  if (this != internal_default_instance()) delete endereco_;
}

void ExpedidorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExpedidorRequest::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExpedidorRequest& ExpedidorRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_ExpedidorRequest.base);
  return *internal_default_instance();
}


void ExpedidorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.ExpedidorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && endereco_ != NULL) {
    delete endereco_;
  }
  endereco_ = NULL;
  _internal_metadata_.Clear();
}

bool ExpedidorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.ExpedidorRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .freterapido.Endereco endereco = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endereco()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.ExpedidorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.ExpedidorRequest)
  return false;
#undef DO_
}

void ExpedidorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.ExpedidorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .freterapido.Endereco endereco = 1;
  if (this->has_endereco()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_endereco(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.ExpedidorRequest)
}

::google::protobuf::uint8* ExpedidorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.ExpedidorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .freterapido.Endereco endereco = 1;
  if (this->has_endereco()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_endereco(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.ExpedidorRequest)
  return target;
}

size_t ExpedidorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.ExpedidorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .freterapido.Endereco endereco = 1;
  if (this->has_endereco()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endereco_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpedidorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.ExpedidorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpedidorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExpedidorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.ExpedidorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.ExpedidorRequest)
    MergeFrom(*source);
  }
}

void ExpedidorRequest::MergeFrom(const ExpedidorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.ExpedidorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_endereco()) {
    mutable_endereco()->::freterapido::Endereco::MergeFrom(from.endereco());
  }
}

void ExpedidorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.ExpedidorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpedidorRequest::CopyFrom(const ExpedidorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.ExpedidorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpedidorRequest::IsInitialized() const {
  return true;
}

void ExpedidorRequest::Swap(ExpedidorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExpedidorRequest::InternalSwap(ExpedidorRequest* other) {
  using std::swap;
  swap(endereco_, other->endereco_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExpedidorRequest::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DestinatarioRequest::InitAsDefaultInstance() {
  ::freterapido::_DestinatarioRequest_default_instance_._instance.get_mutable()->endereco_ = const_cast< ::freterapido::Endereco*>(
      ::freterapido::Endereco::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestinatarioRequest::kTipoPessoaFieldNumber;
const int DestinatarioRequest::kCnpjCpfFieldNumber;
const int DestinatarioRequest::kInscricaoEstadualFieldNumber;
const int DestinatarioRequest::kEnderecoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestinatarioRequest::DestinatarioRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_DestinatarioRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.DestinatarioRequest)
}
DestinatarioRequest::DestinatarioRequest(const DestinatarioRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cnpj_cpf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cnpj_cpf().size() > 0) {
    cnpj_cpf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnpj_cpf_);
  }
  inscricao_estadual_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.inscricao_estadual().size() > 0) {
    inscricao_estadual_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inscricao_estadual_);
  }
  if (from.has_endereco()) {
    endereco_ = new ::freterapido::Endereco(*from.endereco_);
  } else {
    endereco_ = NULL;
  }
  tipo_pessoa_ = from.tipo_pessoa_;
  // @@protoc_insertion_point(copy_constructor:freterapido.DestinatarioRequest)
}

void DestinatarioRequest::SharedCtor() {
  cnpj_cpf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inscricao_estadual_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&endereco_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tipo_pessoa_) -
      reinterpret_cast<char*>(&endereco_)) + sizeof(tipo_pessoa_));
}

DestinatarioRequest::~DestinatarioRequest() {
  // @@protoc_insertion_point(destructor:freterapido.DestinatarioRequest)
  SharedDtor();
}

void DestinatarioRequest::SharedDtor() {
  cnpj_cpf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inscricao_estadual_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete endereco_;
}

void DestinatarioRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DestinatarioRequest::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestinatarioRequest& DestinatarioRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_DestinatarioRequest.base);
  return *internal_default_instance();
}


void DestinatarioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.DestinatarioRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cnpj_cpf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inscricao_estadual_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && endereco_ != NULL) {
    delete endereco_;
  }
  endereco_ = NULL;
  tipo_pessoa_ = 0;
  _internal_metadata_.Clear();
}

bool DestinatarioRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.DestinatarioRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .freterapido.DestinatarioRequest.TipoPessoa tipo_pessoa = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tipo_pessoa(static_cast< ::freterapido::DestinatarioRequest_TipoPessoa >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cnpj_cpf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cnpj_cpf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cnpj_cpf().data(), static_cast<int>(this->cnpj_cpf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.DestinatarioRequest.cnpj_cpf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inscricao_estadual = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inscricao_estadual()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inscricao_estadual().data(), static_cast<int>(this->inscricao_estadual().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.DestinatarioRequest.inscricao_estadual"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .freterapido.Endereco endereco = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endereco()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.DestinatarioRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.DestinatarioRequest)
  return false;
#undef DO_
}

void DestinatarioRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.DestinatarioRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .freterapido.DestinatarioRequest.TipoPessoa tipo_pessoa = 1;
  if (this->tipo_pessoa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->tipo_pessoa(), output);
  }

  // string cnpj_cpf = 2;
  if (this->cnpj_cpf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnpj_cpf().data(), static_cast<int>(this->cnpj_cpf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.DestinatarioRequest.cnpj_cpf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cnpj_cpf(), output);
  }

  // string inscricao_estadual = 3;
  if (this->inscricao_estadual().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inscricao_estadual().data(), static_cast<int>(this->inscricao_estadual().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.DestinatarioRequest.inscricao_estadual");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->inscricao_estadual(), output);
  }

  // .freterapido.Endereco endereco = 4;
  if (this->has_endereco()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_endereco(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.DestinatarioRequest)
}

::google::protobuf::uint8* DestinatarioRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.DestinatarioRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .freterapido.DestinatarioRequest.TipoPessoa tipo_pessoa = 1;
  if (this->tipo_pessoa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->tipo_pessoa(), target);
  }

  // string cnpj_cpf = 2;
  if (this->cnpj_cpf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnpj_cpf().data(), static_cast<int>(this->cnpj_cpf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.DestinatarioRequest.cnpj_cpf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cnpj_cpf(), target);
  }

  // string inscricao_estadual = 3;
  if (this->inscricao_estadual().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inscricao_estadual().data(), static_cast<int>(this->inscricao_estadual().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.DestinatarioRequest.inscricao_estadual");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->inscricao_estadual(), target);
  }

  // .freterapido.Endereco endereco = 4;
  if (this->has_endereco()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_endereco(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.DestinatarioRequest)
  return target;
}

size_t DestinatarioRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.DestinatarioRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cnpj_cpf = 2;
  if (this->cnpj_cpf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cnpj_cpf());
  }

  // string inscricao_estadual = 3;
  if (this->inscricao_estadual().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inscricao_estadual());
  }

  // .freterapido.Endereco endereco = 4;
  if (this->has_endereco()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endereco_);
  }

  // .freterapido.DestinatarioRequest.TipoPessoa tipo_pessoa = 1;
  if (this->tipo_pessoa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tipo_pessoa());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DestinatarioRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.DestinatarioRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DestinatarioRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DestinatarioRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.DestinatarioRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.DestinatarioRequest)
    MergeFrom(*source);
  }
}

void DestinatarioRequest::MergeFrom(const DestinatarioRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.DestinatarioRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cnpj_cpf().size() > 0) {

    cnpj_cpf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnpj_cpf_);
  }
  if (from.inscricao_estadual().size() > 0) {

    inscricao_estadual_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inscricao_estadual_);
  }
  if (from.has_endereco()) {
    mutable_endereco()->::freterapido::Endereco::MergeFrom(from.endereco());
  }
  if (from.tipo_pessoa() != 0) {
    set_tipo_pessoa(from.tipo_pessoa());
  }
}

void DestinatarioRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.DestinatarioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestinatarioRequest::CopyFrom(const DestinatarioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.DestinatarioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestinatarioRequest::IsInitialized() const {
  return true;
}

void DestinatarioRequest::Swap(DestinatarioRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestinatarioRequest::InternalSwap(DestinatarioRequest* other) {
  using std::swap;
  cnpj_cpf_.Swap(&other->cnpj_cpf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inscricao_estadual_.Swap(&other->inscricao_estadual_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(endereco_, other->endereco_);
  swap(tipo_pessoa_, other->tipo_pessoa_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DestinatarioRequest::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VolumeRequest::InitAsDefaultInstance() {
  ::freterapido::_VolumeRequest_default_instance_._instance.get_mutable()->sku_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::freterapido::_VolumeRequest_default_instance_._instance.get_mutable()->descricao_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void VolumeRequest::clear_sku() {
  if (GetArenaNoVirtual() == NULL && sku_ != NULL) {
    delete sku_;
  }
  sku_ = NULL;
}
void VolumeRequest::clear_descricao() {
  if (GetArenaNoVirtual() == NULL && descricao_ != NULL) {
    delete descricao_;
  }
  descricao_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VolumeRequest::kTipoFieldNumber;
const int VolumeRequest::kSkuFieldNumber;
const int VolumeRequest::kDescricaoFieldNumber;
const int VolumeRequest::kQuantidadeFieldNumber;
const int VolumeRequest::kAlturaFieldNumber;
const int VolumeRequest::kLarguraFieldNumber;
const int VolumeRequest::kComprimentoFieldNumber;
const int VolumeRequest::kPesoFieldNumber;
const int VolumeRequest::kValorFieldNumber;
const int VolumeRequest::kVolumesProdutoFieldNumber;
const int VolumeRequest::kConsolidarFieldNumber;
const int VolumeRequest::kSobrepostoFieldNumber;
const int VolumeRequest::kTombarFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VolumeRequest::VolumeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_VolumeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.VolumeRequest)
}
VolumeRequest::VolumeRequest(const VolumeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sku()) {
    sku_ = new ::google::protobuf::StringValue(*from.sku_);
  } else {
    sku_ = NULL;
  }
  if (from.has_descricao()) {
    descricao_ = new ::google::protobuf::StringValue(*from.descricao_);
  } else {
    descricao_ = NULL;
  }
  ::memcpy(&tipo_, &from.tipo_,
    static_cast<size_t>(reinterpret_cast<char*>(&tombar_) -
    reinterpret_cast<char*>(&tipo_)) + sizeof(tombar_));
  // @@protoc_insertion_point(copy_constructor:freterapido.VolumeRequest)
}

void VolumeRequest::SharedCtor() {
  ::memset(&sku_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tombar_) -
      reinterpret_cast<char*>(&sku_)) + sizeof(tombar_));
}

VolumeRequest::~VolumeRequest() {
  // @@protoc_insertion_point(destructor:freterapido.VolumeRequest)
  SharedDtor();
}

void VolumeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete sku_;
  if (this != internal_default_instance()) delete descricao_;
}

void VolumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VolumeRequest::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VolumeRequest& VolumeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_VolumeRequest.base);
  return *internal_default_instance();
}


void VolumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.VolumeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sku_ != NULL) {
    delete sku_;
  }
  sku_ = NULL;
  if (GetArenaNoVirtual() == NULL && descricao_ != NULL) {
    delete descricao_;
  }
  descricao_ = NULL;
  ::memset(&tipo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tombar_) -
      reinterpret_cast<char*>(&tipo_)) + sizeof(tombar_));
  _internal_metadata_.Clear();
}

bool VolumeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.VolumeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 tipo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tipo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue sku = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sku()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue descricao = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_descricao()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quantidade = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quantidade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double altura = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altura_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double largura = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &largura_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double comprimento = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &comprimento_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double peso = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peso_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double valor = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volumes_produto = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumes_produto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool consolidar = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &consolidar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sobreposto = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sobreposto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool tombar = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tombar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.VolumeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.VolumeRequest)
  return false;
#undef DO_
}

void VolumeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.VolumeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tipo = 1;
  if (this->tipo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tipo(), output);
  }

  // .google.protobuf.StringValue sku = 2;
  if (this->has_sku()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sku(), output);
  }

  // .google.protobuf.StringValue descricao = 3;
  if (this->has_descricao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_descricao(), output);
  }

  // int32 quantidade = 4;
  if (this->quantidade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quantidade(), output);
  }

  // double altura = 5;
  if (this->altura() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->altura(), output);
  }

  // double largura = 6;
  if (this->largura() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->largura(), output);
  }

  // double comprimento = 7;
  if (this->comprimento() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->comprimento(), output);
  }

  // double peso = 8;
  if (this->peso() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->peso(), output);
  }

  // double valor = 9;
  if (this->valor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->valor(), output);
  }

  // int32 volumes_produto = 10;
  if (this->volumes_produto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->volumes_produto(), output);
  }

  // bool consolidar = 11;
  if (this->consolidar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->consolidar(), output);
  }

  // bool sobreposto = 12;
  if (this->sobreposto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->sobreposto(), output);
  }

  // bool tombar = 13;
  if (this->tombar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->tombar(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.VolumeRequest)
}

::google::protobuf::uint8* VolumeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.VolumeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tipo = 1;
  if (this->tipo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tipo(), target);
  }

  // .google.protobuf.StringValue sku = 2;
  if (this->has_sku()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sku(), deterministic, target);
  }

  // .google.protobuf.StringValue descricao = 3;
  if (this->has_descricao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_descricao(), deterministic, target);
  }

  // int32 quantidade = 4;
  if (this->quantidade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quantidade(), target);
  }

  // double altura = 5;
  if (this->altura() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->altura(), target);
  }

  // double largura = 6;
  if (this->largura() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->largura(), target);
  }

  // double comprimento = 7;
  if (this->comprimento() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->comprimento(), target);
  }

  // double peso = 8;
  if (this->peso() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->peso(), target);
  }

  // double valor = 9;
  if (this->valor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->valor(), target);
  }

  // int32 volumes_produto = 10;
  if (this->volumes_produto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->volumes_produto(), target);
  }

  // bool consolidar = 11;
  if (this->consolidar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->consolidar(), target);
  }

  // bool sobreposto = 12;
  if (this->sobreposto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->sobreposto(), target);
  }

  // bool tombar = 13;
  if (this->tombar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->tombar(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.VolumeRequest)
  return target;
}

size_t VolumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.VolumeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.StringValue sku = 2;
  if (this->has_sku()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sku_);
  }

  // .google.protobuf.StringValue descricao = 3;
  if (this->has_descricao()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *descricao_);
  }

  // int32 tipo = 1;
  if (this->tipo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tipo());
  }

  // int32 quantidade = 4;
  if (this->quantidade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quantidade());
  }

  // double altura = 5;
  if (this->altura() != 0) {
    total_size += 1 + 8;
  }

  // double largura = 6;
  if (this->largura() != 0) {
    total_size += 1 + 8;
  }

  // double comprimento = 7;
  if (this->comprimento() != 0) {
    total_size += 1 + 8;
  }

  // double peso = 8;
  if (this->peso() != 0) {
    total_size += 1 + 8;
  }

  // double valor = 9;
  if (this->valor() != 0) {
    total_size += 1 + 8;
  }

  // int32 volumes_produto = 10;
  if (this->volumes_produto() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumes_produto());
  }

  // bool consolidar = 11;
  if (this->consolidar() != 0) {
    total_size += 1 + 1;
  }

  // bool sobreposto = 12;
  if (this->sobreposto() != 0) {
    total_size += 1 + 1;
  }

  // bool tombar = 13;
  if (this->tombar() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.VolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VolumeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.VolumeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.VolumeRequest)
    MergeFrom(*source);
  }
}

void VolumeRequest::MergeFrom(const VolumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.VolumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sku()) {
    mutable_sku()->::google::protobuf::StringValue::MergeFrom(from.sku());
  }
  if (from.has_descricao()) {
    mutable_descricao()->::google::protobuf::StringValue::MergeFrom(from.descricao());
  }
  if (from.tipo() != 0) {
    set_tipo(from.tipo());
  }
  if (from.quantidade() != 0) {
    set_quantidade(from.quantidade());
  }
  if (from.altura() != 0) {
    set_altura(from.altura());
  }
  if (from.largura() != 0) {
    set_largura(from.largura());
  }
  if (from.comprimento() != 0) {
    set_comprimento(from.comprimento());
  }
  if (from.peso() != 0) {
    set_peso(from.peso());
  }
  if (from.valor() != 0) {
    set_valor(from.valor());
  }
  if (from.volumes_produto() != 0) {
    set_volumes_produto(from.volumes_produto());
  }
  if (from.consolidar() != 0) {
    set_consolidar(from.consolidar());
  }
  if (from.sobreposto() != 0) {
    set_sobreposto(from.sobreposto());
  }
  if (from.tombar() != 0) {
    set_tombar(from.tombar());
  }
}

void VolumeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.VolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeRequest::CopyFrom(const VolumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.VolumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeRequest::IsInitialized() const {
  return true;
}

void VolumeRequest::Swap(VolumeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VolumeRequest::InternalSwap(VolumeRequest* other) {
  using std::swap;
  swap(sku_, other->sku_);
  swap(descricao_, other->descricao_);
  swap(tipo_, other->tipo_);
  swap(quantidade_, other->quantidade_);
  swap(altura_, other->altura_);
  swap(largura_, other->largura_);
  swap(comprimento_, other->comprimento_);
  swap(peso_, other->peso_);
  swap(valor_, other->valor_);
  swap(volumes_produto_, other->volumes_produto_);
  swap(consolidar_, other->consolidar_);
  swap(sobreposto_, other->sobreposto_);
  swap(tombar_, other->tombar_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VolumeRequest::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CalcularFreteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalcularFreteResponse::kTokenOfertaFieldNumber;
const int CalcularFreteResponse::kTransportadorasFieldNumber;
const int CalcularFreteResponse::kVolumesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalcularFreteResponse::CalcularFreteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_CalcularFreteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.CalcularFreteResponse)
}
CalcularFreteResponse::CalcularFreteResponse(const CalcularFreteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transportadoras_(from.transportadoras_),
      volumes_(from.volumes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_oferta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token_oferta().size() > 0) {
    token_oferta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_oferta_);
  }
  // @@protoc_insertion_point(copy_constructor:freterapido.CalcularFreteResponse)
}

void CalcularFreteResponse::SharedCtor() {
  token_oferta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CalcularFreteResponse::~CalcularFreteResponse() {
  // @@protoc_insertion_point(destructor:freterapido.CalcularFreteResponse)
  SharedDtor();
}

void CalcularFreteResponse::SharedDtor() {
  token_oferta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CalcularFreteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CalcularFreteResponse::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CalcularFreteResponse& CalcularFreteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_CalcularFreteResponse.base);
  return *internal_default_instance();
}


void CalcularFreteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.CalcularFreteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transportadoras_.Clear();
  volumes_.Clear();
  token_oferta_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CalcularFreteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.CalcularFreteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token_oferta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token_oferta()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token_oferta().data(), static_cast<int>(this->token_oferta().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.CalcularFreteResponse.token_oferta"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .freterapido.TransportadoraResponse transportadoras = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transportadoras()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .freterapido.VolumeResponse volumes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_volumes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.CalcularFreteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.CalcularFreteResponse)
  return false;
#undef DO_
}

void CalcularFreteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.CalcularFreteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token_oferta = 1;
  if (this->token_oferta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token_oferta().data(), static_cast<int>(this->token_oferta().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.CalcularFreteResponse.token_oferta");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token_oferta(), output);
  }

  // repeated .freterapido.TransportadoraResponse transportadoras = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transportadoras_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->transportadoras(static_cast<int>(i)),
      output);
  }

  // repeated .freterapido.VolumeResponse volumes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->volumes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->volumes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.CalcularFreteResponse)
}

::google::protobuf::uint8* CalcularFreteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.CalcularFreteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token_oferta = 1;
  if (this->token_oferta().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token_oferta().data(), static_cast<int>(this->token_oferta().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.CalcularFreteResponse.token_oferta");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token_oferta(), target);
  }

  // repeated .freterapido.TransportadoraResponse transportadoras = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transportadoras_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->transportadoras(static_cast<int>(i)), deterministic, target);
  }

  // repeated .freterapido.VolumeResponse volumes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->volumes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->volumes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.CalcularFreteResponse)
  return target;
}

size_t CalcularFreteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.CalcularFreteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .freterapido.TransportadoraResponse transportadoras = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->transportadoras_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transportadoras(static_cast<int>(i)));
    }
  }

  // repeated .freterapido.VolumeResponse volumes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->volumes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->volumes(static_cast<int>(i)));
    }
  }

  // string token_oferta = 1;
  if (this->token_oferta().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token_oferta());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CalcularFreteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.CalcularFreteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CalcularFreteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CalcularFreteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.CalcularFreteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.CalcularFreteResponse)
    MergeFrom(*source);
  }
}

void CalcularFreteResponse::MergeFrom(const CalcularFreteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.CalcularFreteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transportadoras_.MergeFrom(from.transportadoras_);
  volumes_.MergeFrom(from.volumes_);
  if (from.token_oferta().size() > 0) {

    token_oferta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_oferta_);
  }
}

void CalcularFreteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.CalcularFreteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalcularFreteResponse::CopyFrom(const CalcularFreteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.CalcularFreteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalcularFreteResponse::IsInitialized() const {
  return true;
}

void CalcularFreteResponse::Swap(CalcularFreteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalcularFreteResponse::InternalSwap(CalcularFreteResponse* other) {
  using std::swap;
  CastToBase(&transportadoras_)->InternalSwap(CastToBase(&other->transportadoras_));
  CastToBase(&volumes_)->InternalSwap(CastToBase(&other->volumes_));
  token_oferta_.Swap(&other->token_oferta_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CalcularFreteResponse::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransportadoraResponse::InitAsDefaultInstance() {
  ::freterapido::_TransportadoraResponse_default_instance_._instance.get_mutable()->descricao_servico_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::freterapido::_TransportadoraResponse_default_instance_._instance.get_mutable()->validade_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void TransportadoraResponse::clear_descricao_servico() {
  if (GetArenaNoVirtual() == NULL && descricao_servico_ != NULL) {
    delete descricao_servico_;
  }
  descricao_servico_ = NULL;
}
void TransportadoraResponse::clear_validade() {
  if (GetArenaNoVirtual() == NULL && validade_ != NULL) {
    delete validade_;
  }
  validade_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransportadoraResponse::kOfertaFieldNumber;
const int TransportadoraResponse::kCnpjFieldNumber;
const int TransportadoraResponse::kLogotipoFieldNumber;
const int TransportadoraResponse::kNomeFieldNumber;
const int TransportadoraResponse::kServicoFieldNumber;
const int TransportadoraResponse::kDescricaoServicoFieldNumber;
const int TransportadoraResponse::kPrazoEntregaFieldNumber;
const int TransportadoraResponse::kValidadeFieldNumber;
const int TransportadoraResponse::kCustoFreteFieldNumber;
const int TransportadoraResponse::kPrecoFreteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransportadoraResponse::TransportadoraResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_TransportadoraResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.TransportadoraResponse)
}
TransportadoraResponse::TransportadoraResponse(const TransportadoraResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cnpj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cnpj().size() > 0) {
    cnpj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnpj_);
  }
  logotipo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logotipo().size() > 0) {
    logotipo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logotipo_);
  }
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nome().size() > 0) {
    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  servico_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.servico().size() > 0) {
    servico_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servico_);
  }
  if (from.has_descricao_servico()) {
    descricao_servico_ = new ::google::protobuf::StringValue(*from.descricao_servico_);
  } else {
    descricao_servico_ = NULL;
  }
  if (from.has_validade()) {
    validade_ = new ::google::protobuf::Timestamp(*from.validade_);
  } else {
    validade_ = NULL;
  }
  ::memcpy(&oferta_, &from.oferta_,
    static_cast<size_t>(reinterpret_cast<char*>(&prazo_entrega_) -
    reinterpret_cast<char*>(&oferta_)) + sizeof(prazo_entrega_));
  // @@protoc_insertion_point(copy_constructor:freterapido.TransportadoraResponse)
}

void TransportadoraResponse::SharedCtor() {
  cnpj_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logotipo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servico_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&descricao_servico_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prazo_entrega_) -
      reinterpret_cast<char*>(&descricao_servico_)) + sizeof(prazo_entrega_));
}

TransportadoraResponse::~TransportadoraResponse() {
  // @@protoc_insertion_point(destructor:freterapido.TransportadoraResponse)
  SharedDtor();
}

void TransportadoraResponse::SharedDtor() {
  cnpj_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logotipo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servico_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete descricao_servico_;
  if (this != internal_default_instance()) delete validade_;
}

void TransportadoraResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransportadoraResponse::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransportadoraResponse& TransportadoraResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_TransportadoraResponse.base);
  return *internal_default_instance();
}


void TransportadoraResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.TransportadoraResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cnpj_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logotipo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  servico_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && descricao_servico_ != NULL) {
    delete descricao_servico_;
  }
  descricao_servico_ = NULL;
  if (GetArenaNoVirtual() == NULL && validade_ != NULL) {
    delete validade_;
  }
  validade_ = NULL;
  ::memset(&oferta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prazo_entrega_) -
      reinterpret_cast<char*>(&oferta_)) + sizeof(prazo_entrega_));
  _internal_metadata_.Clear();
}

bool TransportadoraResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.TransportadoraResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 oferta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oferta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cnpj = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cnpj()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cnpj().data(), static_cast<int>(this->cnpj().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.TransportadoraResponse.cnpj"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logotipo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logotipo()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logotipo().data(), static_cast<int>(this->logotipo().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.TransportadoraResponse.logotipo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nome = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nome().data(), static_cast<int>(this->nome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.TransportadoraResponse.nome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string servico = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_servico()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->servico().data(), static_cast<int>(this->servico().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "freterapido.TransportadoraResponse.servico"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue descricao_servico = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_descricao_servico()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 prazo_entrega = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prazo_entrega_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp validade = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_validade()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double custo_frete = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &custo_frete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double preco_frete = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &preco_frete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.TransportadoraResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.TransportadoraResponse)
  return false;
#undef DO_
}

void TransportadoraResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.TransportadoraResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 oferta = 1;
  if (this->oferta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->oferta(), output);
  }

  // string cnpj = 2;
  if (this->cnpj().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnpj().data(), static_cast<int>(this->cnpj().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.cnpj");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cnpj(), output);
  }

  // string logotipo = 3;
  if (this->logotipo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logotipo().data(), static_cast<int>(this->logotipo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.logotipo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->logotipo(), output);
  }

  // string nome = 4;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.nome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nome(), output);
  }

  // string servico = 5;
  if (this->servico().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servico().data(), static_cast<int>(this->servico().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.servico");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->servico(), output);
  }

  // .google.protobuf.StringValue descricao_servico = 6;
  if (this->has_descricao_servico()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_descricao_servico(), output);
  }

  // int32 prazo_entrega = 7;
  if (this->prazo_entrega() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->prazo_entrega(), output);
  }

  // .google.protobuf.Timestamp validade = 8;
  if (this->has_validade()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_validade(), output);
  }

  // double custo_frete = 9;
  if (this->custo_frete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->custo_frete(), output);
  }

  // double preco_frete = 10;
  if (this->preco_frete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->preco_frete(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.TransportadoraResponse)
}

::google::protobuf::uint8* TransportadoraResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.TransportadoraResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 oferta = 1;
  if (this->oferta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->oferta(), target);
  }

  // string cnpj = 2;
  if (this->cnpj().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cnpj().data(), static_cast<int>(this->cnpj().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.cnpj");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cnpj(), target);
  }

  // string logotipo = 3;
  if (this->logotipo().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logotipo().data(), static_cast<int>(this->logotipo().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.logotipo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->logotipo(), target);
  }

  // string nome = 4;
  if (this->nome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nome().data(), static_cast<int>(this->nome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.nome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nome(), target);
  }

  // string servico = 5;
  if (this->servico().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->servico().data(), static_cast<int>(this->servico().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "freterapido.TransportadoraResponse.servico");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->servico(), target);
  }

  // .google.protobuf.StringValue descricao_servico = 6;
  if (this->has_descricao_servico()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_descricao_servico(), deterministic, target);
  }

  // int32 prazo_entrega = 7;
  if (this->prazo_entrega() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->prazo_entrega(), target);
  }

  // .google.protobuf.Timestamp validade = 8;
  if (this->has_validade()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_validade(), deterministic, target);
  }

  // double custo_frete = 9;
  if (this->custo_frete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->custo_frete(), target);
  }

  // double preco_frete = 10;
  if (this->preco_frete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->preco_frete(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.TransportadoraResponse)
  return target;
}

size_t TransportadoraResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.TransportadoraResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cnpj = 2;
  if (this->cnpj().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cnpj());
  }

  // string logotipo = 3;
  if (this->logotipo().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logotipo());
  }

  // string nome = 4;
  if (this->nome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nome());
  }

  // string servico = 5;
  if (this->servico().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->servico());
  }

  // .google.protobuf.StringValue descricao_servico = 6;
  if (this->has_descricao_servico()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *descricao_servico_);
  }

  // .google.protobuf.Timestamp validade = 8;
  if (this->has_validade()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *validade_);
  }

  // int64 oferta = 1;
  if (this->oferta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oferta());
  }

  // double custo_frete = 9;
  if (this->custo_frete() != 0) {
    total_size += 1 + 8;
  }

  // double preco_frete = 10;
  if (this->preco_frete() != 0) {
    total_size += 1 + 8;
  }

  // int32 prazo_entrega = 7;
  if (this->prazo_entrega() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prazo_entrega());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransportadoraResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.TransportadoraResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransportadoraResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransportadoraResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.TransportadoraResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.TransportadoraResponse)
    MergeFrom(*source);
  }
}

void TransportadoraResponse::MergeFrom(const TransportadoraResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.TransportadoraResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cnpj().size() > 0) {

    cnpj_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cnpj_);
  }
  if (from.logotipo().size() > 0) {

    logotipo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logotipo_);
  }
  if (from.nome().size() > 0) {

    nome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nome_);
  }
  if (from.servico().size() > 0) {

    servico_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.servico_);
  }
  if (from.has_descricao_servico()) {
    mutable_descricao_servico()->::google::protobuf::StringValue::MergeFrom(from.descricao_servico());
  }
  if (from.has_validade()) {
    mutable_validade()->::google::protobuf::Timestamp::MergeFrom(from.validade());
  }
  if (from.oferta() != 0) {
    set_oferta(from.oferta());
  }
  if (from.custo_frete() != 0) {
    set_custo_frete(from.custo_frete());
  }
  if (from.preco_frete() != 0) {
    set_preco_frete(from.preco_frete());
  }
  if (from.prazo_entrega() != 0) {
    set_prazo_entrega(from.prazo_entrega());
  }
}

void TransportadoraResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.TransportadoraResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransportadoraResponse::CopyFrom(const TransportadoraResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.TransportadoraResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransportadoraResponse::IsInitialized() const {
  return true;
}

void TransportadoraResponse::Swap(TransportadoraResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransportadoraResponse::InternalSwap(TransportadoraResponse* other) {
  using std::swap;
  cnpj_.Swap(&other->cnpj_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  logotipo_.Swap(&other->logotipo_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nome_.Swap(&other->nome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  servico_.Swap(&other->servico_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(descricao_servico_, other->descricao_servico_);
  swap(validade_, other->validade_);
  swap(oferta_, other->oferta_);
  swap(custo_frete_, other->custo_frete_);
  swap(preco_frete_, other->preco_frete_);
  swap(prazo_entrega_, other->prazo_entrega_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransportadoraResponse::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VolumeResponse::InitAsDefaultInstance() {
  ::freterapido::_VolumeResponse_default_instance_._instance.get_mutable()->sku_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
  ::freterapido::_VolumeResponse_default_instance_._instance.get_mutable()->descricao_ = const_cast< ::google::protobuf::StringValue*>(
      ::google::protobuf::StringValue::internal_default_instance());
}
void VolumeResponse::clear_sku() {
  if (GetArenaNoVirtual() == NULL && sku_ != NULL) {
    delete sku_;
  }
  sku_ = NULL;
}
void VolumeResponse::clear_descricao() {
  if (GetArenaNoVirtual() == NULL && descricao_ != NULL) {
    delete descricao_;
  }
  descricao_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VolumeResponse::kTipoFieldNumber;
const int VolumeResponse::kSkuFieldNumber;
const int VolumeResponse::kDescricaoFieldNumber;
const int VolumeResponse::kQuantidadeFieldNumber;
const int VolumeResponse::kAlturaFieldNumber;
const int VolumeResponse::kLarguraFieldNumber;
const int VolumeResponse::kComprimentoFieldNumber;
const int VolumeResponse::kPesoFieldNumber;
const int VolumeResponse::kValorFieldNumber;
const int VolumeResponse::kVolumesProdutoFieldNumber;
const int VolumeResponse::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VolumeResponse::VolumeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_freterapido_2eproto::scc_info_VolumeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:freterapido.VolumeResponse)
}
VolumeResponse::VolumeResponse(const VolumeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sku()) {
    sku_ = new ::google::protobuf::StringValue(*from.sku_);
  } else {
    sku_ = NULL;
  }
  if (from.has_descricao()) {
    descricao_ = new ::google::protobuf::StringValue(*from.descricao_);
  } else {
    descricao_ = NULL;
  }
  ::memcpy(&tipo_, &from.tipo_,
    static_cast<size_t>(reinterpret_cast<char*>(&volumes_produto_) -
    reinterpret_cast<char*>(&tipo_)) + sizeof(volumes_produto_));
  // @@protoc_insertion_point(copy_constructor:freterapido.VolumeResponse)
}

void VolumeResponse::SharedCtor() {
  ::memset(&sku_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volumes_produto_) -
      reinterpret_cast<char*>(&sku_)) + sizeof(volumes_produto_));
}

VolumeResponse::~VolumeResponse() {
  // @@protoc_insertion_point(destructor:freterapido.VolumeResponse)
  SharedDtor();
}

void VolumeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete sku_;
  if (this != internal_default_instance()) delete descricao_;
}

void VolumeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VolumeResponse::descriptor() {
  ::protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VolumeResponse& VolumeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_freterapido_2eproto::scc_info_VolumeResponse.base);
  return *internal_default_instance();
}


void VolumeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:freterapido.VolumeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  if (GetArenaNoVirtual() == NULL && sku_ != NULL) {
    delete sku_;
  }
  sku_ = NULL;
  if (GetArenaNoVirtual() == NULL && descricao_ != NULL) {
    delete descricao_;
  }
  descricao_ = NULL;
  ::memset(&tipo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&volumes_produto_) -
      reinterpret_cast<char*>(&tipo_)) + sizeof(volumes_produto_));
  _internal_metadata_.Clear();
}

bool VolumeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:freterapido.VolumeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 tipo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tipo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue sku = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sku()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.StringValue descricao = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_descricao()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 quantidade = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quantidade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double altura = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &altura_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double largura = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &largura_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double comprimento = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &comprimento_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double peso = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &peso_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double valor = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 volumes_produto = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volumes_produto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .freterapido.VolumeResponse items = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:freterapido.VolumeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:freterapido.VolumeResponse)
  return false;
#undef DO_
}

void VolumeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:freterapido.VolumeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tipo = 1;
  if (this->tipo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tipo(), output);
  }

  // .google.protobuf.StringValue sku = 2;
  if (this->has_sku()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sku(), output);
  }

  // .google.protobuf.StringValue descricao = 3;
  if (this->has_descricao()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_descricao(), output);
  }

  // int32 quantidade = 4;
  if (this->quantidade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quantidade(), output);
  }

  // double altura = 5;
  if (this->altura() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->altura(), output);
  }

  // double largura = 6;
  if (this->largura() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->largura(), output);
  }

  // double comprimento = 7;
  if (this->comprimento() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->comprimento(), output);
  }

  // double peso = 8;
  if (this->peso() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->peso(), output);
  }

  // double valor = 9;
  if (this->valor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->valor(), output);
  }

  // int32 volumes_produto = 10;
  if (this->volumes_produto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->volumes_produto(), output);
  }

  // repeated .freterapido.VolumeResponse items = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->items(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:freterapido.VolumeResponse)
}

::google::protobuf::uint8* VolumeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:freterapido.VolumeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tipo = 1;
  if (this->tipo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tipo(), target);
  }

  // .google.protobuf.StringValue sku = 2;
  if (this->has_sku()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sku(), deterministic, target);
  }

  // .google.protobuf.StringValue descricao = 3;
  if (this->has_descricao()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_descricao(), deterministic, target);
  }

  // int32 quantidade = 4;
  if (this->quantidade() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quantidade(), target);
  }

  // double altura = 5;
  if (this->altura() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->altura(), target);
  }

  // double largura = 6;
  if (this->largura() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->largura(), target);
  }

  // double comprimento = 7;
  if (this->comprimento() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->comprimento(), target);
  }

  // double peso = 8;
  if (this->peso() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->peso(), target);
  }

  // double valor = 9;
  if (this->valor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->valor(), target);
  }

  // int32 volumes_produto = 10;
  if (this->volumes_produto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->volumes_produto(), target);
  }

  // repeated .freterapido.VolumeResponse items = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->items(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:freterapido.VolumeResponse)
  return target;
}

size_t VolumeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:freterapido.VolumeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .freterapido.VolumeResponse items = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  // .google.protobuf.StringValue sku = 2;
  if (this->has_sku()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sku_);
  }

  // .google.protobuf.StringValue descricao = 3;
  if (this->has_descricao()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *descricao_);
  }

  // int32 tipo = 1;
  if (this->tipo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tipo());
  }

  // int32 quantidade = 4;
  if (this->quantidade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->quantidade());
  }

  // double altura = 5;
  if (this->altura() != 0) {
    total_size += 1 + 8;
  }

  // double largura = 6;
  if (this->largura() != 0) {
    total_size += 1 + 8;
  }

  // double comprimento = 7;
  if (this->comprimento() != 0) {
    total_size += 1 + 8;
  }

  // double peso = 8;
  if (this->peso() != 0) {
    total_size += 1 + 8;
  }

  // double valor = 9;
  if (this->valor() != 0) {
    total_size += 1 + 8;
  }

  // int32 volumes_produto = 10;
  if (this->volumes_produto() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->volumes_produto());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VolumeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:freterapido.VolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VolumeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VolumeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:freterapido.VolumeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:freterapido.VolumeResponse)
    MergeFrom(*source);
  }
}

void VolumeResponse::MergeFrom(const VolumeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:freterapido.VolumeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_sku()) {
    mutable_sku()->::google::protobuf::StringValue::MergeFrom(from.sku());
  }
  if (from.has_descricao()) {
    mutable_descricao()->::google::protobuf::StringValue::MergeFrom(from.descricao());
  }
  if (from.tipo() != 0) {
    set_tipo(from.tipo());
  }
  if (from.quantidade() != 0) {
    set_quantidade(from.quantidade());
  }
  if (from.altura() != 0) {
    set_altura(from.altura());
  }
  if (from.largura() != 0) {
    set_largura(from.largura());
  }
  if (from.comprimento() != 0) {
    set_comprimento(from.comprimento());
  }
  if (from.peso() != 0) {
    set_peso(from.peso());
  }
  if (from.valor() != 0) {
    set_valor(from.valor());
  }
  if (from.volumes_produto() != 0) {
    set_volumes_produto(from.volumes_produto());
  }
}

void VolumeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:freterapido.VolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VolumeResponse::CopyFrom(const VolumeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:freterapido.VolumeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VolumeResponse::IsInitialized() const {
  return true;
}

void VolumeResponse::Swap(VolumeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VolumeResponse::InternalSwap(VolumeResponse* other) {
  using std::swap;
  CastToBase(&items_)->InternalSwap(CastToBase(&other->items_));
  swap(sku_, other->sku_);
  swap(descricao_, other->descricao_);
  swap(tipo_, other->tipo_);
  swap(quantidade_, other->quantidade_);
  swap(altura_, other->altura_);
  swap(largura_, other->largura_);
  swap(comprimento_, other->comprimento_);
  swap(peso_, other->peso_);
  swap(valor_, other->valor_);
  swap(volumes_produto_, other->volumes_produto_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VolumeResponse::GetMetadata() const {
  protobuf_freterapido_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_freterapido_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace freterapido
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::CalcularFreteRequest* Arena::CreateMaybeMessage< ::freterapido::CalcularFreteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::CalcularFreteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::Endereco* Arena::CreateMaybeMessage< ::freterapido::Endereco >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::Endereco >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::RemetenteRequest* Arena::CreateMaybeMessage< ::freterapido::RemetenteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::RemetenteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::ExpedidorRequest* Arena::CreateMaybeMessage< ::freterapido::ExpedidorRequest >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::ExpedidorRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::DestinatarioRequest* Arena::CreateMaybeMessage< ::freterapido::DestinatarioRequest >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::DestinatarioRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::VolumeRequest* Arena::CreateMaybeMessage< ::freterapido::VolumeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::VolumeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::CalcularFreteResponse* Arena::CreateMaybeMessage< ::freterapido::CalcularFreteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::CalcularFreteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::TransportadoraResponse* Arena::CreateMaybeMessage< ::freterapido::TransportadoraResponse >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::TransportadoraResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::freterapido::VolumeResponse* Arena::CreateMaybeMessage< ::freterapido::VolumeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::freterapido::VolumeResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
