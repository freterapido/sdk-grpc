/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.freterapido.CalcularFreteRequest');
goog.provide('proto.freterapido.CalcularFreteRequest.Filtro');
goog.provide('proto.freterapido.CalcularFreteRequest.TipoCobranca');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.freterapido.DestinatarioRequest');
goog.require('proto.freterapido.ExpedidorRequest');
goog.require('proto.freterapido.RemetenteRequest');
goog.require('proto.freterapido.VolumeRequest');
goog.require('proto.google.protobuf.Int64Value');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.freterapido.CalcularFreteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.freterapido.CalcularFreteRequest.repeatedFields_, null);
};
goog.inherits(proto.freterapido.CalcularFreteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.freterapido.CalcularFreteRequest.displayName = 'proto.freterapido.CalcularFreteRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.freterapido.CalcularFreteRequest.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.freterapido.CalcularFreteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.freterapido.CalcularFreteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.freterapido.CalcularFreteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.freterapido.CalcularFreteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    tipoCobranca: jspb.Message.getFieldWithDefault(msg, 1, 0),
    filtro: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limite: (f = msg.getLimite()) && proto.google.protobuf.Int64Value.toObject(includeInstance, f),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codigoPlataforma: jspb.Message.getFieldWithDefault(msg, 5, ""),
    retornarConsolidacao: jspb.Message.getFieldWithDefault(msg, 6, false),
    remetente: (f = msg.getRemetente()) && proto.freterapido.RemetenteRequest.toObject(includeInstance, f),
    expedidor: (f = msg.getExpedidor()) && proto.freterapido.ExpedidorRequest.toObject(includeInstance, f),
    destinatario: (f = msg.getDestinatario()) && proto.freterapido.DestinatarioRequest.toObject(includeInstance, f),
    volumesList: jspb.Message.toObjectList(msg.getVolumesList(),
    proto.freterapido.VolumeRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.freterapido.CalcularFreteRequest}
 */
proto.freterapido.CalcularFreteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.freterapido.CalcularFreteRequest;
  return proto.freterapido.CalcularFreteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.freterapido.CalcularFreteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.freterapido.CalcularFreteRequest}
 */
proto.freterapido.CalcularFreteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.freterapido.CalcularFreteRequest.TipoCobranca} */ (reader.readEnum());
      msg.setTipoCobranca(value);
      break;
    case 2:
      var value = /** @type {!proto.freterapido.CalcularFreteRequest.Filtro} */ (reader.readEnum());
      msg.setFiltro(value);
      break;
    case 3:
      var value = new proto.google.protobuf.Int64Value;
      reader.readMessage(value,proto.google.protobuf.Int64Value.deserializeBinaryFromReader);
      msg.setLimite(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodigoPlataforma(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRetornarConsolidacao(value);
      break;
    case 7:
      var value = new proto.freterapido.RemetenteRequest;
      reader.readMessage(value,proto.freterapido.RemetenteRequest.deserializeBinaryFromReader);
      msg.setRemetente(value);
      break;
    case 8:
      var value = new proto.freterapido.ExpedidorRequest;
      reader.readMessage(value,proto.freterapido.ExpedidorRequest.deserializeBinaryFromReader);
      msg.setExpedidor(value);
      break;
    case 9:
      var value = new proto.freterapido.DestinatarioRequest;
      reader.readMessage(value,proto.freterapido.DestinatarioRequest.deserializeBinaryFromReader);
      msg.setDestinatario(value);
      break;
    case 10:
      var value = new proto.freterapido.VolumeRequest;
      reader.readMessage(value,proto.freterapido.VolumeRequest.deserializeBinaryFromReader);
      msg.addVolumes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.freterapido.CalcularFreteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.freterapido.CalcularFreteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.freterapido.CalcularFreteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.freterapido.CalcularFreteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTipoCobranca();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFiltro();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getLimite();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodigoPlataforma();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRetornarConsolidacao();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getRemetente();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.freterapido.RemetenteRequest.serializeBinaryToWriter
    );
  }
  f = message.getExpedidor();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.freterapido.ExpedidorRequest.serializeBinaryToWriter
    );
  }
  f = message.getDestinatario();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.freterapido.DestinatarioRequest.serializeBinaryToWriter
    );
  }
  f = message.getVolumesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.freterapido.VolumeRequest.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.freterapido.CalcularFreteRequest.TipoCobranca = {
  TIPOCOBRANCA_UNKNOWN: 0,
  TIPOCOBRANCA_CIF: 1,
  TIPOCOBRANCA_FOB: 2
};

/**
 * @enum {number}
 */
proto.freterapido.CalcularFreteRequest.Filtro = {
  FILTRO_SEM_FILTRO: 0,
  FILTRO_MENOR_PRECO: 1,
  FILTRO_MENOR_PRAZO: 2
};

/**
 * optional TipoCobranca tipo_cobranca = 1;
 * @return {!proto.freterapido.CalcularFreteRequest.TipoCobranca}
 */
proto.freterapido.CalcularFreteRequest.prototype.getTipoCobranca = function() {
  return /** @type {!proto.freterapido.CalcularFreteRequest.TipoCobranca} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.freterapido.CalcularFreteRequest.TipoCobranca} value */
proto.freterapido.CalcularFreteRequest.prototype.setTipoCobranca = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Filtro filtro = 2;
 * @return {!proto.freterapido.CalcularFreteRequest.Filtro}
 */
proto.freterapido.CalcularFreteRequest.prototype.getFiltro = function() {
  return /** @type {!proto.freterapido.CalcularFreteRequest.Filtro} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.freterapido.CalcularFreteRequest.Filtro} value */
proto.freterapido.CalcularFreteRequest.prototype.setFiltro = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Int64Value limite = 3;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.freterapido.CalcularFreteRequest.prototype.getLimite = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Int64Value, 3));
};


/** @param {?proto.google.protobuf.Int64Value|undefined} value */
proto.freterapido.CalcularFreteRequest.prototype.setLimite = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.freterapido.CalcularFreteRequest.prototype.clearLimite = function() {
  this.setLimite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.freterapido.CalcularFreteRequest.prototype.hasLimite = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.freterapido.CalcularFreteRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.freterapido.CalcularFreteRequest.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string codigo_plataforma = 5;
 * @return {string}
 */
proto.freterapido.CalcularFreteRequest.prototype.getCodigoPlataforma = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.freterapido.CalcularFreteRequest.prototype.setCodigoPlataforma = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool retornar_consolidacao = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.freterapido.CalcularFreteRequest.prototype.getRetornarConsolidacao = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.freterapido.CalcularFreteRequest.prototype.setRetornarConsolidacao = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional RemetenteRequest remetente = 7;
 * @return {?proto.freterapido.RemetenteRequest}
 */
proto.freterapido.CalcularFreteRequest.prototype.getRemetente = function() {
  return /** @type{?proto.freterapido.RemetenteRequest} */ (
    jspb.Message.getWrapperField(this, proto.freterapido.RemetenteRequest, 7));
};


/** @param {?proto.freterapido.RemetenteRequest|undefined} value */
proto.freterapido.CalcularFreteRequest.prototype.setRemetente = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.freterapido.CalcularFreteRequest.prototype.clearRemetente = function() {
  this.setRemetente(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.freterapido.CalcularFreteRequest.prototype.hasRemetente = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ExpedidorRequest expedidor = 8;
 * @return {?proto.freterapido.ExpedidorRequest}
 */
proto.freterapido.CalcularFreteRequest.prototype.getExpedidor = function() {
  return /** @type{?proto.freterapido.ExpedidorRequest} */ (
    jspb.Message.getWrapperField(this, proto.freterapido.ExpedidorRequest, 8));
};


/** @param {?proto.freterapido.ExpedidorRequest|undefined} value */
proto.freterapido.CalcularFreteRequest.prototype.setExpedidor = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.freterapido.CalcularFreteRequest.prototype.clearExpedidor = function() {
  this.setExpedidor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.freterapido.CalcularFreteRequest.prototype.hasExpedidor = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional DestinatarioRequest destinatario = 9;
 * @return {?proto.freterapido.DestinatarioRequest}
 */
proto.freterapido.CalcularFreteRequest.prototype.getDestinatario = function() {
  return /** @type{?proto.freterapido.DestinatarioRequest} */ (
    jspb.Message.getWrapperField(this, proto.freterapido.DestinatarioRequest, 9));
};


/** @param {?proto.freterapido.DestinatarioRequest|undefined} value */
proto.freterapido.CalcularFreteRequest.prototype.setDestinatario = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.freterapido.CalcularFreteRequest.prototype.clearDestinatario = function() {
  this.setDestinatario(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.freterapido.CalcularFreteRequest.prototype.hasDestinatario = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated VolumeRequest volumes = 10;
 * @return {!Array<!proto.freterapido.VolumeRequest>}
 */
proto.freterapido.CalcularFreteRequest.prototype.getVolumesList = function() {
  return /** @type{!Array<!proto.freterapido.VolumeRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.freterapido.VolumeRequest, 10));
};


/** @param {!Array<!proto.freterapido.VolumeRequest>} value */
proto.freterapido.CalcularFreteRequest.prototype.setVolumesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.freterapido.VolumeRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.freterapido.VolumeRequest}
 */
proto.freterapido.CalcularFreteRequest.prototype.addVolumes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.freterapido.VolumeRequest, opt_index);
};


proto.freterapido.CalcularFreteRequest.prototype.clearVolumesList = function() {
  this.setVolumesList([]);
};


